apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "djkube.fullname" . }}-web
  labels:
    {{- include "djkube.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "djkube.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "djkube.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "djkube.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: {{ .Chart.Name }}-init
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["python", "manage.py", "migrate"] 
          env:
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "djkube.fullname" . }}-postgresql
                key: postgres-password
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "djkube.fullname" . }}-redis
                key: redis-password
      containers:
        - name: {{ .Chart.Name }}
          command: ["gunicorn", "djkube.wsgi:application", "--bind", "0.0.0.0:8080"]
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "djkube.fullname" . }}-postgresql
                key: postgres-password
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "djkube.fullname" . }}-redis
                key: redis-password
          livenessProbe:
            httpGet:
              path: /admin/
              port: http
          readinessProbe:
            httpGet:
              path: /admin/
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
